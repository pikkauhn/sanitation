// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model user {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  roles         String
  sessions      session[]
  password      String
  otps          oTP[]
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model bin {
  id              String       @id @default(uuid())
  size_id         String?
  size            binSizes?    @relation(fields: [size_id], references: [id])
  location        location?    @relation(fields: [location_id], references: [id])
  location_id     String?
  status          String
  last_emptied_at DateTime?
  history         binHistory[]
}

model binSizes {
  id     String @id @default(uuid())
  size   String
  charge Float
  bin    bin[]
}

model location {
  id        String       @id @default(uuid())
  address   String
  latitude  Float
  longitude Float
  // GaiGPS - ask Travis
  notes     String?
  billable  String?
  days      Int?        @default(0)
  bins      bin[]
  history   binHistory[]
}

model binHistory {
  id         String    @id @default(uuid())
  bin        bin       @relation(fields: [binId], references: [id])
  binId      String
  location   location  @relation(fields: [locationId], references: [id])
  locationId String
  startDate  DateTime
  endDate    DateTime?
}

model oTP {
  id                 String   @id @default(uuid())
  user               user     @relation(fields: [userId], references: [id])
  userId             String
  isVerified         Boolean? @default(false)
  code               String   @unique
  expirationDateTime DateTime
}
